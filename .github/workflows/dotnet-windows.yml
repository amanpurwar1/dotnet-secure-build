name: .NET Secure Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  build-and-secure:
    runs-on: windows-latest
    
    outputs:
      build_sha: ${{ steps.hash.outputs.build_sha }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0  # Full history for better provenance

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Generate Build Manifest
        run: |
          echo "Build started at: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" > build-manifest.txt
          echo "Repository: ${{ github.repository }}" >> build-manifest.txt
          echo "Commit: ${{ github.sha }}" >> build-manifest.txt
          echo "Branch: ${{ github.ref }}" >> build-manifest.txt

      - name: Verify Dependencies
        run: |
          dotnet list src/MyApp/MyApp/MyApp.csproj package --include-transitive > dependencies.txt
          dotnet restore src/MyApp/MyApp/MyApp.csproj --locked-mode

      - name: Build
        run: |
          dotnet build src/MyApp/MyApp/MyApp.csproj --configuration Release --no-restore
          
          # Create build info file
          Get-ChildItem -Recurse -Filter *.dll -Path src/MyApp/MyApp/bin/Release/ | ForEach-Object {
            $hash = (Get-FileHash -Path $_.FullName -Algorithm SHA256).Hash
            "$($_.Name) - $hash" >> build-hashes.txt
          }

      - name: Run Tests
        run: |
          dotnet test src/MyApp/MyApp/MyApp.csproj --configuration Release --no-build --verbosity normal

      # - name: WhiteSource Scan
      #   env:
      #     WS_APIKEY: ${{ secrets.WHITESOURCE_API_KEY }}
      #     WS_USERKEY: ${{ secrets.WHITESOURCE_USER_KEY }}
      #     WS_PROJECTNAME: ${{ github.repository }}
      #     WS_PRODUCTNAME: "MyApp"
      #   run: |
      #     # Download WhiteSource Unified Agent
      #     Invoke-WebRequest -Uri https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar -OutFile wss-unified-agent.jar
          
      #     # Create config file
      #     @"
      #     resolveAllDependencies=true
      #     projectName=${env:WS_PROJECTNAME}
      #     productName=${env:WS_PRODUCTNAME}
      #     wss.url=https://saas.whitesourcesoftware.com/agent
      #     includes=**/*.dll
      #     "@ | Out-File -FilePath wss-unified-agent.config -Encoding UTF8
          
      #     # Run WhiteSource scan
      #     java -jar wss-unified-agent.jar -c wss-unified-agent.config -d src/MyApp/MyApp/bin/Release/
          
      #     # Add scan results to build manifest
      #     echo "WhiteSource Scan completed at: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" >> build-manifest.txt

      - name: Generate Build Hash
        id: hash
        run: |
          $buildHash = (Get-FileHash -Path "build-hashes.txt" -Algorithm SHA256).Hash
          echo "build_sha=$buildHash" >> $env:GITHUB_OUTPUT
          echo "Build Hash: $buildHash" >> build-manifest.txt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: secure-build
          path: |
            src/MyApp/MyApp/bin/Release/
            build-manifest.txt
            build-hashes.txt
            dependencies.txt
            wss-unified-agent.config
          retention-days: 10

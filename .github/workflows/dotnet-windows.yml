name: .NET Secure Build with Attestations

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  build-and-secure:
    runs-on: windows-latest
    
    outputs:
      build_sha: ${{ steps.hash.outputs.build_sha }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0  # Full history for better provenance

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Generate Build Manifest
        run: |
          echo "Build started at: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" > build-manifest.txt
          echo "Repository: ${{ github.repository }}" >> build-manifest.txt
          echo "Commit: ${{ github.sha }}" >> build-manifest.txt
          echo "Branch: ${{ github.ref }}" >> build-manifest.txt

      - name: Verify Dependencies
        run: |
          dotnet list src/MyApp/MyApp/MyApp.csproj package --include-transitive > dependencies.txt
          dotnet restore src/MyApp/MyApp/MyApp.csproj --locked-mode

      - name: Build
        run: |
          dotnet build src/MyApp/MyApp/MyApp.csproj --configuration Release --no-restore
          
          # Create build info file
          Get-ChildItem -Recurse -Filter *.dll -Path src/MyApp/MyApp/bin/Release/ | ForEach-Object {
            $hash = (Get-FileHash -Path $_.FullName -Algorithm SHA256).Hash
            "$($_.Name) - $hash" >> build-hashes.txt
          }

      - name: Run Tests
        run: |
          dotnet test src/MyApp/MyApp/MyApp.csproj --configuration Release --no-build --verbosity normal

      - name: Generate Build Hash
        id: hash
        run: |
          $buildHash = (Get-FileHash -Path "build-hashes.txt" -Algorithm SHA256).Hash
          echo "build_sha=$buildHash" >> $env:GITHUB_OUTPUT
          echo "Build Hash: $buildHash" >> build-manifest.txt

      # - name: Create Attestation
      #   run: |
      #     $attestation = @{
      #       "_type" = "https://in-toto.io/Statement/v0.1"
      #       "subject" = @(@{
      #         "name" = "${{ github.repository }}"
      #         "digest" = @{
      #           "sha256" = "${{ steps.hash.outputs.build_sha }}"
      #         }
      #       })
      #       "predicateType" = "https://slsa.dev/provenance/v0.2"
      #       "predicate" = @{
      #         "builder" = @{
      #           "id" = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #         }
      #         "buildType" = "https://github.com/actions/workflow"
      #         "invocation" = @{
      #           "configSource" = @{
      #             "uri" = "git+https://github.com/${{ github.repository }}@${{ github.ref }}"
      #             "digest" = @{
      #               "sha1" = "${{ github.sha }}"
      #             }
      #           }
      #         }
      #       }
      #     }
      #     $attestation | ConvertTo-Json -Depth 10 > attestation.json

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: secure-build
          path: |
            src/MyApp/MyApp/bin/Release/
            build-manifest.txt
            build-hashes.txt
            dependencies.txt
            retention-days: 7
      #       attestation.json
            

      # - name: Upload Build Manifest to Security Tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: attestation.json
      #     category: build-attestation

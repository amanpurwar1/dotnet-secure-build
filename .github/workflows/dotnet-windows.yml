name: Whitesource Scan & Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manual trigger

jobs:
  whitesource:
    runs-on: windows-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Tag Name
        shell: pwsh
        run: |
          if ("${{ github.event.ref }}" -eq "") {
            Write-Host "Provide a Valid Tag Name"
            exit 1
          } else {
            Write-Host "Tag Name: ${{ github.event.ref }}"
          }

      - name: Clone Private Repository
        run: |
          git clone https://USERNAME:TOKEN@ADOURL/IAutomate/IAutomateBaseCode_NEW/_git/IAutomateBaseCode_GIT --branch ${{ github.ref_name }} --depth=1

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet Packages
        run: |
          nuget restore IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.ADSyncService/abc.iAutomate.Service.AD.sln
          nuget restore IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.DataCollector/abc.iAutomate.DataCollector.sln
          nuget restore IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.EmailService/abc.iAutomate.EmailService.sln
          nuget restore IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.EmbeddedInstaller/abc.iAutomate.EmbeddedInstaller.sln

      - name: Restore NuGet for abc.iAutomate.RbaExecutor
        run: dotnet restore IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.RbaExecutor/abc.iAutomate.RbaExecutor.sln

      - name: Verify NuGet Packages
        run: nuget verify -All **/*.nupkg
        working-directory: IAutomateBaseCode_GIT/SourceCode 

      - name: Install NuGet Package from Azure Feeds
        run: nuget install ${{ secrets.NUGET_PACKAGE_NAME }} -version ${{ secrets.NUGET_PACKAGE_VERSION }}

      - name: Unzip NuGet Package
        shell: pwsh
        run: |
          $destination="IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.iRecommend/com/irecommend/nlp/${{ secrets.ZIP_FILE_NAME }}"
          $fileToUnzip="IAutomateBaseCode_GIT/${{ secrets.NUGET_PACKAGE_NAME }}.${{ secrets.NUGET_PACKAGE_VERSION }}/${{ secrets.ZIP_FILE_NAME }}.zip"
          Expand-Archive $fileToUnzip -DestinationPath $destination

      - name: Build Solutions
        run: |
          msbuild IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.installer/PreRequisitesChecker.sln /p:Configuration=Release
          msbuild IAutomateBaseCode_GIT/SourceCode/iAutomateWeb/iAutomateWeb/iAutomateWeb.csproj /p:DeployOnBuild=True /p:Configuration=Release
          msbuild IAutomateBaseCode_GIT/SourceCode/iAutomateWeb/iAutomateWeb.WebAPI/iAutomateWeb.WebAPI.csproj /p:DeployOnBuild=True /p:Configuration=Release
          msbuild IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.GenericService/abc.iAutomate.GenericService.sln /p:Configuration=Release

      - name: Build .NET Core Projects
        run: |
          dotnet build IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.RbaExecutor/abc.iAutomate.RbaExecutor.sln --configuration Release
          dotnet publish IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.RbaExecutor/abc.iAutomate.RbaExecutor.Api/abc.iAutomate.RbaExecutor.Api.csproj -p:PublishProfile=Properties/PublishProfiles/FolderProfile.pubxml --configuration Release --runtime linux-x64 --output bin\Release\net8.0\publish\ --framework net8.0

      - name: Build Additional Solutions
        run: |
          msbuild IAutomateBaseCode_GIT/SourceCode/iAutomateListner/abc.iAutomate.Listner.sln /p:Configuration=Release
          msbuild IAutomateBaseCode_GIT/SourceCode/abc.iAutomate.EmailService/abc.iAutomate.EmailService.sln /p:Configuration=Release
          msbuild IAutomateBaseCode_GIT/SourceCode/Verizon.RBAConnector/Verizon.RBAConnector.sln /p:Configuration=Release

      - name: Get Scan Date
        shell: pwsh
        run: |
          $date1 = Get-Date -Format dd_MM_yyyy
          Write-Host "Scan Date: $date1"
          echo "scandate=$date1" >> $GITHUB_ENV

      - name: Whitesource Scan
        run: |
          cd IAutomateBaseCode_GIT/SourceCode
          java -jar "C:\WhiteSource\wss-unified-agent.jar" -c "IAutomateBaseCode_GIT/Devops/wss-unified-agent.config" -apiKey ${{ secrets.WHITESOURCE_API_KEY }} -userKey ${{ secrets.WHITESOURCE_USER_KEY }} -d "." -product "IAutomate" -project "IAutomate_${{ github.run_number }}_${{ env.scandate }}"
